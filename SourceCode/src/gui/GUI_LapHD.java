/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import connectDB.ConnectDB;
import dao.Dao_ChiTietHoaDon;
import dao.Dao_HoaDon;
import dao.Dao_KhachHang;
import dao.Dao_LoaiSanPham;
import dao.Dao_NhanVien;
import dao.Dao_PhatSinhMa;
import dao.Dao_SanPham;
import dao.Dao_TacGia;
import entity.ChiTietHoaDon;
import entity.HoaDon;
import entity.KhachHang;
import entity.LoaiSanPham;
import entity.NhanVien;
import entity.SanPham;
import entity.TacGia;

/**
 *
 * @author Admin
 */
public class GUI_LapHD extends javax.swing.JPanel implements ActionListener, MouseListener, KeyListener {
	private Dao_PhatSinhMa dao_PhatSinhMa = new Dao_PhatSinhMa();
	private Dao_TacGia dao_TacGia = new Dao_TacGia();
	private Dao_LoaiSanPham dao_LoaiSanPham = new Dao_LoaiSanPham();
	private Dao_SanPham dao_SanPham = new Dao_SanPham();
	private Dao_KhachHang dao_KhachHang = new Dao_KhachHang();
	private Dao_ChiTietHoaDon dao_ChiTietHoaDon = new Dao_ChiTietHoaDon();
	private Dao_HoaDon dao_HoaDon = new Dao_HoaDon();
	private Dao_NhanVien dao_NhanVien = new Dao_NhanVien();
	private double tongTien = 0;
	private DecimalFormat df = new DecimalFormat("#,##0.00 VND");
	private DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    /**
     * Creates new form GUI_LapHD
     */
    public GUI_LapHD() {
    	initComponents();
		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		lbNgayLap.setText(dtf.format(LocalDate.now()) + "");
		lbMaHD.setText(dao_PhatSinhMa.getMaHD());
		lbTenNV.setText(dao_NhanVien.getNhanVienTheoMa(GUI_DangNhap.getTxtTaiKhoan().getText()).getHoTen());
		for (TacGia tg : dao_TacGia.getAllTG()) {
			cbbTacGia.addItem(tg.getHoTen());
		}
		for (String lsp : dao_LoaiSanPham.getAllLoaiSP()) {
			cbbDanhMuc.addItem(lsp);
		}
		cbbDanhMuc.addActionListener(this);
		jListSP.addMouseListener(this);
		btnLamMoi.addActionListener(this);
		btnTimKH.addActionListener(this);
		btnTimSanPham.addActionListener(this);
		txtTienTra.addKeyListener(this);
		btnThanhToan.addActionListener(this);
		tableChiTietHoaDon.addMouseListener(new MouseListener() {

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseClicked(MouseEvent e) {
				if (SwingUtilities.isRightMouseButton(e)) {
					int r = tableChiTietHoaDon.rowAtPoint(e.getPoint());
					if (r >= 0 && r < tableChiTietHoaDon.getRowCount()) {
						tableChiTietHoaDon.setRowSelectionInterval(r, r);
					} else {
						tableChiTietHoaDon.clearSelection();
					}
					int rowselect = tableChiTietHoaDon.getSelectedRow();
					if (rowselect < 0)
						return;
					else {
						popSP.show(e.getComponent(), e.getX(), e.getY());
					}
				}
			}
		});
		btnHuyDon.addActionListener(this);
		btnChonKH.addActionListener(this);
		btnXemCTHD.addActionListener(this);
		btnThemVaoHC.addActionListener(this);
		btnHangCho.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        btnTimSanPham = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSP = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbbTacGia = new javax.swing.JComboBox<>();
        cbbTenLoai = new javax.swing.JComboBox<>();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        btnLamMoi = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableChiTietHoaDon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtTienTra = new javax.swing.JTextField();
        lbTongTien = new javax.swing.JLabel();
        lbTienTra = new javax.swing.JLabel();
        lbTenKH = new javax.swing.JLabel();
        lbSDTKH = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        btnTimKH = new javax.swing.JButton();
        btnChonKH = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        btnHuyDon = new javax.swing.JButton();
        btnXemCTHD = new javax.swing.JButton();
        chkXuatIn = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        lbMaHD = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbNgayLap = new javax.swing.JLabel();
        lbThongBaoTien = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbTenNV = new javax.swing.JLabel();
        btnHangCho = new javax.swing.JButton();
        btnThemVaoHC = new javax.swing.JButton();

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnTimSanPham.setBackground(new java.awt.Color(51, 153, 255));
        btnTimSanPham.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnTimSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnTimSanPham.setIcon(new javax.swing.ImageIcon("img\\timkiem.png")); // NOI18N
        btnTimSanPham.setToolTipText("Tìm Kiếm Sản Phẩm");

        jListSP.setSelectionBackground(new java.awt.Color(51, 153, 255));
        jScrollPane1.setViewportView(jListSP);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );

        jLabel12.setText("Tên: ");

        jLabel13.setText("Loại:");

        cbbTacGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tác Giả" }));

        cbbTenLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên Loại" }));

        cbbDanhMuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Danh Mục" }));
        cbbDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDanhMucActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(51, 153, 255));
        btnLamMoi.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon("img\\refresh.png")); // NOI18N
        btnLamMoi.setToolTipText("Làm mới dữ liệu");

        jLabel15.setText("Mã:");

        txtMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbTacGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMaSP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTimSanPham, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLamMoi))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbbTacGia)
                            .addComponent(jTextField1)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbDanhMuc, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(cbbTenLoai)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnTimSanPham)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLamMoi)))
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        tableChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Số lượng", "Giá ", "Thành tiền"
            }
        ));
        String[] header = { "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá ", "Thành tiền" };
		modelHoaDon = new DefaultTableModel(header, 0);
		tableChiTietHoaDon = new JTable(modelHoaDon);
		tableChiTietHoaDon.setGridColor(new java.awt.Color(204, 204, 204));
		tableChiTietHoaDon.setRowHeight(30);
		tableChiTietHoaDon.setSelectionBackground(new java.awt.Color(51, 153, 255));
		tableChiTietHoaDon.setSelectionForeground(new java.awt.Color(255, 255, 255));
		jScrollPane3.setViewportView(tableChiTietHoaDon);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông Tin Hóa Đơn");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Tìm kiếm KH: ");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Khách hàng: ");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Tổng HĐ có (VAT): ");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Tiền nhận: ");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Tiền trả: ");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("SDT: ");

        lbTongTien.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        lbTongTien.setForeground(new java.awt.Color(255, 51, 51));

        btnTimKH.setBackground(new java.awt.Color(51, 153, 255));
        btnTimKH.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnTimKH.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKH.setIcon(new javax.swing.ImageIcon("img\\timkiem24.png")); // NOI18N
        btnTimKH.setToolTipText("Tìm Kiếm Khách Hàng Bằng Số Điện Thoại");

        btnChonKH.setBackground(new java.awt.Color(51, 153, 255));
        btnChonKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChonKH.setForeground(new java.awt.Color(255, 255, 255));
        btnChonKH.setIcon(new javax.swing.ImageIcon("img\\add24.png")); // NOI18N
        btnChonKH.setText("Chọn KH");

        btnThanhToan.setBackground(new java.awt.Color(51, 153, 255));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setIcon(new javax.swing.ImageIcon("img\\buy.png")); // NOI18N
        btnThanhToan.setText("Thanh Toán");

        btnHuyDon.setBackground(new java.awt.Color(51, 153, 255));
        btnHuyDon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHuyDon.setForeground(new java.awt.Color(255, 255, 255));
        btnHuyDon.setIcon(new javax.swing.ImageIcon("img\\delete.png")); // NOI18N
        btnHuyDon.setText("Hủy đơn");

        btnXemCTHD.setBackground(new java.awt.Color(51, 153, 255));
        btnXemCTHD.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnXemCTHD.setForeground(new java.awt.Color(255, 255, 255));
        btnXemCTHD.setIcon(new javax.swing.ImageIcon("img\\document24.png")); // NOI18N

        chkXuatIn.setText("Xuất In");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Mã hóa đơn: ");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Ngày lập: ");

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel14.setText("Nhân Viên Lập:");

        btnHangCho.setBackground(new java.awt.Color(51, 153, 255));
        btnHangCho.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHangCho.setForeground(new java.awt.Color(255, 255, 255));
        btnHangCho.setIcon(new javax.swing.ImageIcon("img\\hangcho.png")); // NOI18N
        btnHangCho.setText("Hàng Chờ");

        btnThemVaoHC.setBackground(new java.awt.Color(51, 153, 255));
        btnThemVaoHC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemVaoHC.setForeground(new java.awt.Color(255, 255, 255));
        btnThemVaoHC.setIcon(new javax.swing.ImageIcon("img\\themHangCho.png")); // NOI18N
        btnThemVaoHC.setText("Thêm Vào Hàng Chờ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addComponent(lbTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbThongBaoTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(126, 126, 126))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTienTra)
                        .addGap(126, 126, 126))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                        .addComponent(btnThemVaoHC, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143)
                        .addComponent(btnHuyDon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXemCTHD)
                        .addGap(18, 18, 18)
                        .addComponent(chkXuatIn)
                        .addGap(10, 10, 10)
                        .addComponent(btnThanhToan)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel11Layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel11Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnTimKH)
                                                .addGap(79, 79, 79)
                                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                                        .addComponent(btnChonKH)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnHangCho)
                                                        .addGap(18, 18, 18))))))
                                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnTimKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField4)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChonKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHangCho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbThongBaoTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(chkXuatIn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuyDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThemVaoHC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnXemCTHD, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap())
        );
        model = new DefaultListModel<>();
		for (SanPham sp : dao_SanPham.getAllSP()) {
			model.addElement(sp);
		}

		jListSP = new JList<SanPham>(model);
		jListSP.setCellRenderer(new SanPhamRenderer());
		jListSP.setSelectionBackground(new java.awt.Color(51, 153, 255));
		jScrollPane1.setViewportView(jListSP);
		
        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void cbbDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbDanhMucActionPerformed

    private void txtMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonKH;
    private javax.swing.JButton btnHangCho;
    private javax.swing.JButton btnHuyDon;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThemVaoHC;
    private javax.swing.JButton btnTimKH;
    private javax.swing.JButton btnTimSanPham;
    private javax.swing.JButton btnXemCTHD;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbTacGia;
    private javax.swing.JComboBox<String> cbbTenLoai;
    private javax.swing.JCheckBox chkXuatIn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private JList<SanPham> jListSP;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField txtTienTra;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField txtMaSP;
    private static javax.swing.JLabel lbMaHD;
	private static javax.swing.JLabel lbNgayLap;
	private static javax.swing.JLabel lbSDTKH;
	private static javax.swing.JLabel lbTenKH;
	private static javax.swing.JLabel lbTenNV;
	private static javax.swing.JLabel lbThongBaoTien;
	private static javax.swing.JLabel lbTienTra;
	private static javax.swing.JLabel lbTongTien;
	private static javax.swing.JTable tableChiTietHoaDon;
    private DefaultListModel<SanPham> model;
	private static DefaultTableModel modelHoaDon;
     // End of variables declaration//GEN-END:variables
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
		if (o.equals(cbbDanhMuc)) {
			if (!cbbDanhMuc.getSelectedItem().toString().equalsIgnoreCase("Danh Mục")) {
				cbbTenLoai.removeAllItems();
				for (LoaiSanPham lsp : dao_LoaiSanPham.getLoaiTheoDM(cbbDanhMuc.getSelectedItem().toString())) {
					cbbTenLoai.addItem(lsp.getChiTiet());
				}
			} else {
				cbbTenLoai.removeAllItems();
				cbbTenLoai.addItem("Tên Loại");
			}
		} else if (o.equals(btnLamMoi)) {
			jTextField1.setText("");
			cbbTacGia.setSelectedIndex(0);
			cbbDanhMuc.setSelectedIndex(0);
			cbbTenLoai.addItem("Tên Loại");
			txtMaSP.setText("");
			model.setSize(0);
			for (SanPham sp : dao_SanPham.getAllSP()) {
				model.addElement(sp);
			}
		} else if (o.equals(btnTimSanPham)) {
			loadDataListSP();
		} else if (o.equals(btnTimKH)) {
			KhachHang kh = dao_KhachHang.getKHTheoSDT(jTextField4.getText());
			if (kh == null) {
				JOptionPane.showMessageDialog(this, "Số điện thoại này không tồn tại");
			} else {
				lbSDTKH.setText(kh.getHoTen());
				lbTenKH.setText(kh.getSdt());
			}
		} else if (o.equals(btnThanhToan)) {
			try {
			if (lbTenKH.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Bạn chưa nhập khách hàng");
			} else if (txtTienTra.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Bạn chưa nhập tiền nhận");
			} else if(Double.parseDouble(txtTienTra.getText())<tongTien){
				JOptionPane.showMessageDialog(this, "Tiền nhận chưa đủ");
			}else {
				if (JOptionPane.showInternalConfirmDialog(this, "Bạn có chắc muốn thanh toán không", "Thông báo",
						JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					HoaDon hd = new HoaDon(lbMaHD.getText(), Date.valueOf(LocalDate.now()),
							new NhanVien(GUI_DangNhap.getTxtTaiKhoan().getText()),
							dao_KhachHang.getKHTheoSDT(lbTenKH.getText()));
					if (!dao_HoaDon.getFull().contains(hd)) {
						dao_HoaDon.themHD(hd);
						for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
							int sl = Integer.parseInt(modelHoaDon.getValueAt(i, 2).toString());
							dao_ChiTietHoaDon.themCTHD(new ChiTietHoaDon(sl,
									dao_SanPham.getSPTheoMa(modelHoaDon.getValueAt(i, 0).toString()), hd));
						}
						inHoaDon();
					}else {
						dao_HoaDon.suaTrangThai(hd);
						dao_ChiTietHoaDon.xoaCTHD(hd.getMaHoaDon());
						for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
							int sl = Integer.parseInt(modelHoaDon.getValueAt(i, 2).toString());
							dao_ChiTietHoaDon.themCTHD(new ChiTietHoaDon(sl,
									dao_SanPham.getSPTheoMa(modelHoaDon.getValueAt(i, 0).toString()), hd));
						}
						inHoaDon();
					}
					JOptionPane.showMessageDialog(this, "Thanh toán thành công");
					for (int i = tableChiTietHoaDon.getRowCount() - 1; i >= 0; i--) {
						modelHoaDon.removeRow(i);
					}
					jTextField4.setText("");
					txtTienTra.setText("");
					lbSDTKH.setText("");
					lbTenKH.setText("");
					lbTongTien.setText("");
					lbTienTra.setText("");
					lbMaHD.setText(dao_PhatSinhMa.getMaHD());
				}

			}
			} catch (Exception e2) {
				JOptionPane.showInternalMessageDialog(null, "Tiền nhận không hợp lệ");
			}

		}else if(o.equals(btnThemVaoHC)) {
			if (lbTenKH.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Bạn chưa nhập khách hàng");
			}else {
				if (JOptionPane.showInternalConfirmDialog(this, "Bạn có chắc muốn thêm vào hàng chờ không", "Thông báo",
						JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					HoaDon hd = new HoaDon(lbMaHD.getText(), Date.valueOf(LocalDate.now()),
							new NhanVien(GUI_DangNhap.getTxtTaiKhoan().getText()),
							dao_KhachHang.getKHTheoSDT(lbTenKH.getText()),"Đang Chờ");
					if (!dao_HoaDon.getFull().contains(hd)) {
						dao_HoaDon.themHDCho(hd);
					}else {
						dao_ChiTietHoaDon.xoaCTHD(hd.getMaHoaDon());
						dao_HoaDon.xoaHoaDon(hd.getMaHoaDon());
						dao_HoaDon.themHDCho(hd);
					}
					for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
						int sl = Integer.parseInt(modelHoaDon.getValueAt(i, 2).toString());
						dao_ChiTietHoaDon.themCTHD(new ChiTietHoaDon(sl,
								dao_SanPham.getSPTheoMa(modelHoaDon.getValueAt(i, 0).toString()), hd));
					}
					for (int i = tableChiTietHoaDon.getRowCount() - 1; i >= 0; i--) {
						modelHoaDon.removeRow(i);
					}
					jTextField4.setText("");
					txtTienTra.setText("");
					lbSDTKH.setText("");
					lbTenKH.setText("");
					lbTongTien.setText("");
					lbTienTra.setText("");
					lbMaHD.setText(dao_PhatSinhMa.getMaHD());
				}
			}
		}else if (o.equals(btnHuyDon)) {
			if (JOptionPane.showInternalConfirmDialog(this, "Bạn có chắc muốn hủy không", "Thông báo",
					JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
				for (int i = tableChiTietHoaDon.getRowCount() - 1; i >= 0; i--) {
					SanPham sp = dao_SanPham.getSPTheoMa(modelHoaDon.getValueAt(i, 0).toString());
					dao_SanPham.suaSoLuongSP(sp.getMaSanPham(),
							sp.getSoLuong() + Integer.parseInt(modelHoaDon.getValueAt(i, 2).toString()));
					modelHoaDon.removeRow(i);

				}
				jTextField4.setText("");
				txtTienTra.setText("");
				lbSDTKH.setText("");
				lbTenKH.setText("");
				lbTongTien.setText("");
				lbTienTra.setText("");
				loadDataListSP();
				lbMaHD.setText(dao_PhatSinhMa.getMaHD());
				lbNgayLap.setText(dtf.format(LocalDate.now()) + "");
			}
		} else if (o.equals(btnChonKH)) {
			GUI_KhachHang gui_KhachHang = new GUI_KhachHang();
			gui_KhachHang.getBtnTroVe().setVisible(true);
			if(dao_NhanVien.getChucVuTheoMa(GUI_DangNhap.getTxtTaiKhoan().getText()).equals("Nhân Viên")) {
				NhanVienDN.getFrame().setContentPane(gui_KhachHang);
			}else {
				QuanLyDN.getFrame().setContentPane(gui_KhachHang);
			}
			gui_KhachHang.getTableKhachHang().addMouseListener(new MouseAdapter() {
				public void mousePressed(MouseEvent mouseEvent) {
					JTable table = (JTable) mouseEvent.getSource();
					Point point = mouseEvent.getPoint();
					int row = table.rowAtPoint(point);

					if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
						int c = JOptionPane.showConfirmDialog(null,
								"Bạn muốn chọn khách hàng " + table.getValueAt(row, 1).toString() + " ?",
								"Thông báo", JOptionPane.YES_NO_OPTION);
						if (c == JOptionPane.YES_OPTION) {
							lbSDTKH.setText(table.getValueAt(row, 1).toString());
							lbTenKH.setText(table.getValueAt(row, 2).toString());
							if(dao_NhanVien.getChucVuTheoMa(GUI_DangNhap.getTxtTaiKhoan().getText()).equals("Nhân Viên")) {
								NhanVienDN.getFrame().setContentPane(NhanVienDN.guiLapHoaDon());
							}else {
								QuanLyDN.getFrame().setContentPane(QuanLyDN.guiLapHoaDon());
							}
						}
					}
				}
			});
		} else if (o.equals(btnXemCTHD)) {
			if (lbTenKH.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Bạn chưa nhập khách hàng");
			} else if (txtTienTra.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Bạn chưa nhập tiền nhận");
			} else {
				GUI_ChiTietHoaDon gui_ChiTietHoaDon = new GUI_ChiTietHoaDon();
				gui_ChiTietHoaDon.setVisible(true);
				gui_ChiTietHoaDon.setLocationRelativeTo(null);
				gui_ChiTietHoaDon.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
			}
		} else if(o.equals(btnHangCho)) {
			GUI_HangCho gui_HangCho = new GUI_HangCho();
			gui_HangCho.setVisible(true);
			gui_HangCho.setLocationRelativeTo(null);
			gui_HangCho.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		}
	}

	private void inHoaDon() {
		if (chkXuatIn.isSelected()) {
			// Tạo ra 1 file PDF
			String path = System.getProperty("user.dir") + "\\hoadon\\" + lbMaHD.getText() + ".pdf";
			com.itextpdf.text.Font textFont = FontFactory.getFont("font/SVN-Arial.ttf", BaseFont.IDENTITY_H,
					BaseFont.EMBEDDED, 10); // 10 is the size
			com.itextpdf.text.Font textFont24 = FontFactory.getFont("font/SVN-Arial.ttf",
					BaseFont.IDENTITY_H, BaseFont.EMBEDDED, 24); // 30 is the size
			
			Document doc = new Document();
			try {
				PdfWriter.getInstance(doc, new FileOutputStream(path));
				doc.open();
				Paragraph karaokeName = new Paragraph("                 Nhà Sách Thiên Văn\n", textFont24);
				doc.add(karaokeName);
				Paragraph karaokeNameDiaChi = new Paragraph(
						"                               Địa chỉ: 12 Nguyễn Văn Bảo. Quận Gò Vấp, Thành phố Hồ Chí Minh\n",
						textFont);
				doc.add(karaokeNameDiaChi);
				Paragraph karaokeNameSDT = new Paragraph(
						"                                                          Số điện thoại: 0338556837\n",
						textFont);
				doc.add(karaokeNameSDT);
				Paragraph starLine = new Paragraph(
						"==================================================================================",
						textFont);
				doc.add(starLine);
				
				// Thông tin nhân viên
				Paragraph paragraphMaNhanVienLine1 = new Paragraph(
						"               Mã hóa đơn:" + lbMaHD.getText()
						+ "                                             Ngày lập hóa đơn: "
						+ lbNgayLap.getText() + "\n",
						textFont);
				doc.add(paragraphMaNhanVienLine1);
				Paragraph paragraphTenNhanVienLine2 = new Paragraph(
						"              Tên nhân viên: " + lbTenNV.getText(), textFont);
				doc.add(paragraphTenNhanVienLine2);
				doc.add(starLine);
				
				// Thông tin hóa đơn
				Paragraph paragraphMaHoaDonLine1 = new Paragraph(
						"              Khách hàng: " + lbSDTKH.getText() + 
						"                           Số điện thoại: "
						+ lbTenKH.getText() + "\n",
						textFont);
				doc.add(paragraphMaHoaDonLine1);
				doc.add(starLine);
				doc.add(new Paragraph("\n"));
				
				PdfPTable tbl = new PdfPTable(5);
				tbl.addCell(new Phrase("        STT", textFont));
				tbl.addCell(new Phrase(" Tên Sản Phẩm", textFont));
				tbl.addCell(new Phrase("        Số Lượng", textFont));
				tbl.addCell(new Phrase("        Giá", textFont));
				tbl.addCell(new Phrase("        Thành Tiền", textFont));
				for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
					String ten = tableChiTietHoaDon.getValueAt(i, 1).toString();
					String sl = tableChiTietHoaDon.getValueAt(i, 2).toString();
					String gia = tableChiTietHoaDon.getValueAt(i, 3).toString();
					String thanhTien = tableChiTietHoaDon.getValueAt(i, 4).toString();
					tbl.addCell(new Phrase((i+1)+"", textFont));
					tbl.addCell(new Phrase(ten, textFont));
					tbl.addCell(new Phrase(sl, textFont));
					tbl.addCell(new Phrase(gia, textFont));
					tbl.addCell(new Phrase(thanhTien, textFont));
				}
				doc.add(tbl);
				Paragraph prTongTien = new Paragraph(
						"                                                                  "+
								"                                    "+
								"Tổng Tiền(Có VAT): "+ lbTongTien.getText() + "\n",textFont);
				doc.add(prTongTien);
				Paragraph prTienNhan = new Paragraph(
						"                                                                  "+
								"                                    "+
								"Tiền Nhận: "+ txtTienTra.getText() + "\n",textFont);
				doc.add(prTienNhan);
				doc.add(new Paragraph(
						"                                                                                            "+
								"          ---------------------------------------------------",
								textFont));
				Paragraph prTienTra = new Paragraph(
						"                                                                  "+
								"                                    "+
								"Tiền trả: "+ lbTienTra.getText() + "\n",textFont);
				doc.add(prTienTra);
				
				
				doc.add(starLine);
				
				
				
				Paragraph thanskMsg = new Paragraph(
						"                                       Xin cám ơn quí khách đã mua hàng, hẹn gặp lại vào lần sau!!",
						textFont);
				doc.add(thanskMsg);
				doc.close();
				// open pdf
				OpenFilePDF.openBill(lbMaHD.getText());
				
			} catch (Exception ex) {
				JOptionPane.showMessageDialog(null, ex);
			}
		}
		
	}

	private void loadDataListSP() {
		String ma = txtMaSP.getText();
		String ten = jTextField1.getText();
		String tacGia = cbbTacGia.getSelectedItem().toString();
		String danhMuc = cbbDanhMuc.getSelectedItem().toString();
		String tenLoai = cbbTenLoai.getSelectedItem().toString();
		if (cbbTacGia.getSelectedIndex() == 0)
			tacGia = "";
		if (cbbDanhMuc.getSelectedIndex() == 0)
			danhMuc = "";
		if (cbbTenLoai.getSelectedItem().equals("Tên Loại"))
			tenLoai = "";

		if (cbbTacGia.getSelectedIndex() == 0 && cbbDanhMuc.getSelectedIndex() == 0) {
			model.removeAllElements();
			for (SanPham sp : dao_SanPham.getSPTheoTen(ma,ten)) {
				model.addElement(sp);
			}
		} else if (cbbTacGia.getSelectedIndex() == 0 && cbbDanhMuc.getSelectedIndex() != 0) {
			model.removeAllElements();
			for (SanPham sp : dao_SanPham.getSPTheoDanhMuc(ma,ten, danhMuc, tenLoai)) {
				model.addElement(sp);
			}
		} else if (cbbTacGia.getSelectedIndex() != 0) {
			model.removeAllElements();
			for (SanPham sp : dao_SanPham.getSachTheoTenVaTG(ma,ten, tacGia, danhMuc, tenLoai)) {
				model.addElement(sp);
			}
		}
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		jListSP = (JList<SanPham>) e.getSource();
		if (e.getClickCount() == 2) {
			SanPham sp = model.getElementAt(jListSP.getSelectedIndex());
			String soLuong = JOptionPane.showInputDialog(this, "Nhập số lượng ");
			Double giaBan = sp.tinhGiaBan();
			if(dao_SanPham.getSPTheoMaDangGiamGia(sp.getMaSanPham())!=null) {
				double giamGia =dao_SanPham.getSPTheoMaDangGiamGia(sp.getMaSanPham()).getGiamGia();
				giaBan = sp.tinhGiaBan()*(1-giamGia/100);
			}
			try {
				int soluong = Integer.parseInt(soLuong);
				if (soluong <= 0) {
					JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0");
				} else if (soluong > sp.getSoLuong()) {
					JOptionPane.showMessageDialog(null, "Không đủ số lượng");
				} else {
					int vt = getVT(sp.getMaSanPham());
					if (vt == -1) {
						String[] row = { sp.getMaSanPham(), sp.getTenSanPham(), soLuong, giaBan + "",
								soluong * giaBan + "" };
						modelHoaDon.addRow(row);
						int sl = sp.getSoLuong() - soluong;
						sp.setSoLuong(sl);
						dao_SanPham.suaSoLuongSP(sp.getMaSanPham(), sl);
						tongTien = 0;
						for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
							tongTien += Double.parseDouble(modelHoaDon.getValueAt(i, 4).toString());
						}
//					String a = "567.233";
//					
//					a = a.substring(0, a.length() - 4);
//					double b = Double.parseDouble(a)+1;
						tongTien = tongTien + tongTien * 0.05;
						lbTongTien.setText(df.format(tongTien));

						txtTienTra.setText("");
						lbTienTra.setText("");
						lbThongBaoTien.setText("");
					} else {
						int x = Integer.parseInt(modelHoaDon.getValueAt(vt, 2).toString());
						modelHoaDon.setValueAt(x + soluong, vt, 2);
						modelHoaDon.setValueAt(
								(x + soluong) * Double.parseDouble(modelHoaDon.getValueAt(vt, 3).toString()), vt, 4);
						int sl = sp.getSoLuong() - soluong;
						sp.setSoLuong(sl);
						dao_SanPham.suaSoLuongSP(sp.getMaSanPham(), sl);
						tongTien = 0;
						for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
							tongTien += Double.parseDouble(modelHoaDon.getValueAt(i, 4).toString());
						}
						tongTien = tongTien + tongTien * 0.05;
						lbTongTien.setText(df.format(tongTien));

						txtTienTra.setText("");
						lbTienTra.setText("");
						lbThongBaoTien.setText("");
					}

				}

			} catch (NumberFormatException e2) {
				JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên");
			}
		}
	}

	public int getVT(String ma) {
		if (tableChiTietHoaDon.getRowCount() > 0) {
			for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
				System.out.println(i);
				System.out.println(modelHoaDon.getValueAt(i, 0).toString());
				if (modelHoaDon.getValueAt(i, 0).toString().equals(ma))
					return i;
			}
		}
		return -1;
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyReleased(KeyEvent e) {
		Object obj = e.getSource();
		if (obj.equals(txtTienTra)) {
			if (txtTienTra.getText().equals("")) {
				lbTienTra.setText("");
			}
			try {
				double tienNhan = Double.parseDouble(txtTienTra.getText());
				if(tienNhan<0) {
					lbThongBaoTien.setText("Tiền nhận không thể là số âm");
				}
				else if (tienNhan >=0 && tienNhan < tongTien) {
					lbThongBaoTien.setText("Nhỏ hơn tổng tiền hóa đơn");
					lbThongBaoTien.setForeground(Color.red);
					lbTienTra.setText("");
				} else {
					double tienTra = tienNhan - tongTien;
					lbTienTra.setText(String.valueOf(df.format(Math.round(tienTra))));
					lbThongBaoTien.setText("");
				}
			} catch (Exception e2) {
				lbThongBaoTien.setText("Nhập sai định dạng");
				lbThongBaoTien.setForeground(Color.red);
			}
		}
	}

	public class RightClickPopUp extends JPopupMenu {
		public RightClickPopUp(JTable table) {

			JMenuItem sua = new JMenuItem("Sửa số lượng");
			JMenuItem xoa = new JMenuItem("Xóa");

			sua.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					String soLuong = JOptionPane.showInputDialog(null, "Nhập số lượng mới");
					int r = tableChiTietHoaDon.getSelectedRow();
					SanPham sp = dao_SanPham
							.getSPTheoMa(modelHoaDon.getValueAt(tableChiTietHoaDon.getSelectedRow(), 0).toString());
					try {
						int soluong = Integer.parseInt(soLuong);
						if (soluong <= 0) {
							JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0");
						} else if (soluong > sp.getSoLuong() + Integer
								.parseInt(modelHoaDon.getValueAt(tableChiTietHoaDon.getSelectedRow(), 2).toString())) {
							JOptionPane.showMessageDialog(null, "Không đủ số lượng");
						} else {
							dao_SanPham.suaSoLuongSP(sp.getMaSanPham(), sp.getSoLuong()
									+ Integer.parseInt(
											modelHoaDon.getValueAt(tableChiTietHoaDon.getSelectedRow(), 2).toString())
									- soluong);
							modelHoaDon.setValueAt(soluong, r, 2);
							double gia = Double.parseDouble(modelHoaDon.getValueAt(r, 3).toString());
							double tinhTien = soluong * gia;
							modelHoaDon.setValueAt(tinhTien, r, 4);
							loadDataListSP();
							tongTien = 0;
							for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
								tongTien += Double.parseDouble(modelHoaDon.getValueAt(i, 4).toString());
							}
							tongTien = tongTien + tongTien * 0.05;
							lbTongTien.setText(df.format(tongTien));
							if (tongTien == 0) {
								lbTongTien.setText("");
							}
						}
					} catch (NumberFormatException e2) {
						JOptionPane.showMessageDialog(null, "Số lượng phải là số nguyên");
					}
				}
			});
			xoa.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					if (JOptionPane.showInternalConfirmDialog(null, "Bạn có chắc chắn muốn xóa không.", "Cảnh báo",
							JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
						SanPham sp = dao_SanPham
								.getSPTheoMa(modelHoaDon.getValueAt(tableChiTietHoaDon.getSelectedRow(), 0).toString());
						int sl = sp.getSoLuong() + Integer
								.parseInt(modelHoaDon.getValueAt(tableChiTietHoaDon.getSelectedRow(), 2).toString());
						dao_SanPham.suaSoLuongSP(sp.getMaSanPham(), sl);
						loadDataListSP();
						modelHoaDon.removeRow(tableChiTietHoaDon.getSelectedRow());
						tongTien = 0;
						for (int i = 0; i < tableChiTietHoaDon.getRowCount(); i++) {
							tongTien += Double.parseDouble(modelHoaDon.getValueAt(i, 4).toString());
						}
						tongTien = tongTien + tongTien * 0.05;
						lbTongTien.setText(df.format(tongTien));
						if (tongTien == 0) {
							lbTongTien.setText("");
						}
					}

				}
			});
			add(sua);
			add(xoa);
		}
	}

	private RightClickPopUp popSP = new RightClickPopUp(tableChiTietHoaDon);
	
	public Dao_PhatSinhMa getDao_PhatSinhMa() {
		return dao_PhatSinhMa;
	}

	public void setDao_PhatSinhMa(Dao_PhatSinhMa dao_PhatSinhMa) {
		this.dao_PhatSinhMa = dao_PhatSinhMa;
	}

	public Dao_TacGia getDao_TacGia() {
		return dao_TacGia;
	}

	public void setDao_TacGia(Dao_TacGia dao_TacGia) {
		this.dao_TacGia = dao_TacGia;
	}

	public Dao_LoaiSanPham getDao_LoaiSanPham() {
		return dao_LoaiSanPham;
	}

	public void setDao_LoaiSanPham(Dao_LoaiSanPham dao_LoaiSanPham) {
		this.dao_LoaiSanPham = dao_LoaiSanPham;
	}

	public Dao_SanPham getDao_SanPham() {
		return dao_SanPham;
	}

	public void setDao_SanPham(Dao_SanPham dao_SanPham) {
		this.dao_SanPham = dao_SanPham;
	}

	public Dao_KhachHang getDao_KhachHang() {
		return dao_KhachHang;
	}

	public void setDao_KhachHang(Dao_KhachHang dao_KhachHang) {
		this.dao_KhachHang = dao_KhachHang;
	}

	public Dao_ChiTietHoaDon getDao_ChiTietHoaDon() {
		return dao_ChiTietHoaDon;
	}

	public void setDao_ChiTietHoaDon(Dao_ChiTietHoaDon dao_ChiTietHoaDon) {
		this.dao_ChiTietHoaDon = dao_ChiTietHoaDon;
	}

	public Dao_HoaDon getDao_HoaDon() {
		return dao_HoaDon;
	}

	public void setDao_HoaDon(Dao_HoaDon dao_HoaDon) {
		this.dao_HoaDon = dao_HoaDon;
	}

	public Dao_NhanVien getDao_NhanVien() {
		return dao_NhanVien;
	}

	public void setDao_NhanVien(Dao_NhanVien dao_NhanVien) {
		this.dao_NhanVien = dao_NhanVien;
	}

	public double getTongTien() {
		return tongTien;
	}

	public void setTongTien(double tongTien) {
		this.tongTien = tongTien;
	}

	public DecimalFormat getDf() {
		return df;
	}

	public void setDf(DecimalFormat df) {
		this.df = df;
	}

	public DateTimeFormatter getDtf() {
		return dtf;
	}

	public void setDtf(DateTimeFormatter dtf) {
		this.dtf = dtf;
	}

	public javax.swing.JButton getBtnChonKH() {
		return btnChonKH;
	}

	public void setBtnChonKH(javax.swing.JButton btnChonKH) {
		this.btnChonKH = btnChonKH;
	}

	public javax.swing.JButton getBtnHangCho() {
		return btnHangCho;
	}

	public void setBtnHangCho(javax.swing.JButton btnHangCho) {
		this.btnHangCho = btnHangCho;
	}

	public javax.swing.JButton getBtnHuyDon() {
		return btnHuyDon;
	}

	public void setBtnHuyDon(javax.swing.JButton btnHuyDon) {
		this.btnHuyDon = btnHuyDon;
	}

	public javax.swing.JButton getBtnLamMoi() {
		return btnLamMoi;
	}

	public void setBtnLamMoi(javax.swing.JButton btnLamMoi) {
		this.btnLamMoi = btnLamMoi;
	}

	public javax.swing.JButton getBtnThanhToan() {
		return btnThanhToan;
	}

	public void setBtnThanhToan(javax.swing.JButton btnThanhToan) {
		this.btnThanhToan = btnThanhToan;
	}

	public javax.swing.JButton getBtnThemVaoHC() {
		return btnThemVaoHC;
	}

	public void setBtnThemVaoHC(javax.swing.JButton btnThemVaoHC) {
		this.btnThemVaoHC = btnThemVaoHC;
	}

	public javax.swing.JButton getBtnTimKH() {
		return btnTimKH;
	}

	public void setBtnTimKH(javax.swing.JButton btnTimKH) {
		this.btnTimKH = btnTimKH;
	}

	public javax.swing.JButton getBtnTimSanPham() {
		return btnTimSanPham;
	}

	public void setBtnTimSanPham(javax.swing.JButton btnTimSanPham) {
		this.btnTimSanPham = btnTimSanPham;
	}

	public javax.swing.JButton getBtnXemCTHD() {
		return btnXemCTHD;
	}

	public void setBtnXemCTHD(javax.swing.JButton btnXemCTHD) {
		this.btnXemCTHD = btnXemCTHD;
	}

	public javax.swing.JComboBox<String> getCbbDanhMuc() {
		return cbbDanhMuc;
	}

	public void setCbbDanhMuc(javax.swing.JComboBox<String> cbbDanhMuc) {
		this.cbbDanhMuc = cbbDanhMuc;
	}

	public javax.swing.JComboBox<String> getCbbTacGia() {
		return cbbTacGia;
	}

	public void setCbbTacGia(javax.swing.JComboBox<String> cbbTacGia) {
		this.cbbTacGia = cbbTacGia;
	}

	public javax.swing.JComboBox<String> getCbbTenLoai() {
		return cbbTenLoai;
	}

	public void setCbbTenLoai(javax.swing.JComboBox<String> cbbTenLoai) {
		this.cbbTenLoai = cbbTenLoai;
	}

	public javax.swing.JCheckBox getChkXuatIn() {
		return chkXuatIn;
	}

	public void setChkXuatIn(javax.swing.JCheckBox chkXuatIn) {
		this.chkXuatIn = chkXuatIn;
	}

	public javax.swing.JLabel getjLabel1() {
		return jLabel1;
	}

	public void setjLabel1(javax.swing.JLabel jLabel1) {
		this.jLabel1 = jLabel1;
	}

	public javax.swing.JLabel getjLabel10() {
		return jLabel10;
	}

	public void setjLabel10(javax.swing.JLabel jLabel10) {
		this.jLabel10 = jLabel10;
	}

	public javax.swing.JLabel getjLabel11() {
		return jLabel11;
	}

	public void setjLabel11(javax.swing.JLabel jLabel11) {
		this.jLabel11 = jLabel11;
	}

	public javax.swing.JLabel getjLabel12() {
		return jLabel12;
	}

	public void setjLabel12(javax.swing.JLabel jLabel12) {
		this.jLabel12 = jLabel12;
	}

	public javax.swing.JLabel getjLabel13() {
		return jLabel13;
	}

	public void setjLabel13(javax.swing.JLabel jLabel13) {
		this.jLabel13 = jLabel13;
	}

	public javax.swing.JLabel getjLabel14() {
		return jLabel14;
	}

	public void setjLabel14(javax.swing.JLabel jLabel14) {
		this.jLabel14 = jLabel14;
	}

	public javax.swing.JLabel getjLabel15() {
		return jLabel15;
	}

	public void setjLabel15(javax.swing.JLabel jLabel15) {
		this.jLabel15 = jLabel15;
	}

	public javax.swing.JLabel getjLabel2() {
		return jLabel2;
	}

	public void setjLabel2(javax.swing.JLabel jLabel2) {
		this.jLabel2 = jLabel2;
	}

	public javax.swing.JLabel getjLabel3() {
		return jLabel3;
	}

	public void setjLabel3(javax.swing.JLabel jLabel3) {
		this.jLabel3 = jLabel3;
	}

	public javax.swing.JLabel getjLabel4() {
		return jLabel4;
	}

	public void setjLabel4(javax.swing.JLabel jLabel4) {
		this.jLabel4 = jLabel4;
	}

	public javax.swing.JLabel getjLabel5() {
		return jLabel5;
	}

	public void setjLabel5(javax.swing.JLabel jLabel5) {
		this.jLabel5 = jLabel5;
	}

	public javax.swing.JLabel getjLabel6() {
		return jLabel6;
	}

	public void setjLabel6(javax.swing.JLabel jLabel6) {
		this.jLabel6 = jLabel6;
	}

	public javax.swing.JLabel getjLabel7() {
		return jLabel7;
	}

	public void setjLabel7(javax.swing.JLabel jLabel7) {
		this.jLabel7 = jLabel7;
	}

	public JList<SanPham> getjListSP() {
		return jListSP;
	}

	public void setjListSP(JList<SanPham> jListSP) {
		this.jListSP = jListSP;
	}

	public javax.swing.JPanel getjPanel10() {
		return jPanel10;
	}

	public void setjPanel10(javax.swing.JPanel jPanel10) {
		this.jPanel10 = jPanel10;
	}

	public javax.swing.JPanel getjPanel11() {
		return jPanel11;
	}

	public void setjPanel11(javax.swing.JPanel jPanel11) {
		this.jPanel11 = jPanel11;
	}

	public javax.swing.JPanel getjPanel7() {
		return jPanel7;
	}

	public void setjPanel7(javax.swing.JPanel jPanel7) {
		this.jPanel7 = jPanel7;
	}

	public javax.swing.JPanel getjPanel8() {
		return jPanel8;
	}

	public void setjPanel8(javax.swing.JPanel jPanel8) {
		this.jPanel8 = jPanel8;
	}

	public javax.swing.JPanel getjPanel9() {
		return jPanel9;
	}

	public void setjPanel9(javax.swing.JPanel jPanel9) {
		this.jPanel9 = jPanel9;
	}

	public javax.swing.JScrollPane getjScrollPane1() {
		return jScrollPane1;
	}

	public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
		this.jScrollPane1 = jScrollPane1;
	}

	public javax.swing.JScrollPane getjScrollPane3() {
		return jScrollPane3;
	}

	public void setjScrollPane3(javax.swing.JScrollPane jScrollPane3) {
		this.jScrollPane3 = jScrollPane3;
	}

	public javax.swing.JSeparator getjSeparator1() {
		return jSeparator1;
	}

	public void setjSeparator1(javax.swing.JSeparator jSeparator1) {
		this.jSeparator1 = jSeparator1;
	}

	public javax.swing.JTextField getjTextField1() {
		return jTextField1;
	}

	public void setjTextField1(javax.swing.JTextField jTextField1) {
		this.jTextField1 = jTextField1;
	}

	public static javax.swing.JTextField getTxtTienTra() {
		return txtTienTra;
	}

	public static void setTxtTienTra(javax.swing.JTextField txtTienTra) {
		GUI_LapHD.txtTienTra = txtTienTra;
	}

	public javax.swing.JTextField getjTextField4() {
		return jTextField4;
	}

	public void setjTextField4(javax.swing.JTextField jTextField4) {
		this.jTextField4 = jTextField4;
	}

	public javax.swing.JTextField getTxtMaSP() {
		return txtMaSP;
	}

	public void setTxtMaSP(javax.swing.JTextField txtMaSP) {
		this.txtMaSP = txtMaSP;
	}

	public static javax.swing.JLabel getLbThongBaoTien() {
		return lbThongBaoTien;
	}

	public static void setLbThongBaoTien(javax.swing.JLabel lbThongBaoTien) {
		GUI_LapHD.lbThongBaoTien = lbThongBaoTien;
	}

	public DefaultListModel<SanPham> getModel() {
		return model;
	}

	public void setModel(DefaultListModel<SanPham> model) {
		this.model = model;
	}

	public RightClickPopUp getPopSP() {
		return popSP;
	}

	public void setPopSP(RightClickPopUp popSP) {
		this.popSP = popSP;
	}

	public static javax.swing.JLabel getLbMaHD() {
		return lbMaHD;
	}

	public void setLbMaHD(javax.swing.JLabel lbMaHD) {
		this.lbMaHD = lbMaHD;
	}

	public static javax.swing.JLabel getLbTenNV() {
		return lbTenNV;
	}

	public void setLbTenNV(javax.swing.JLabel lbTenNV) {
		this.lbTenNV = lbTenNV;
	}

	public static javax.swing.JLabel getLbNgayLap() {
		return lbNgayLap;
	}

	public void setLbNgayLap(javax.swing.JLabel lbNgayLap) {
		this.lbNgayLap = lbNgayLap;
	}

	public static javax.swing.JLabel getLbSDTKH() {
		return lbSDTKH;
	}

	public void setLbSDTKH(javax.swing.JLabel lbSDTKH) {
		this.lbSDTKH = lbSDTKH;
	}

	public static javax.swing.JLabel getLbTenKH() {
		return lbTenKH;
	}

	public void setLbTenKH(javax.swing.JLabel lbTenKH) {
		this.lbTenKH = lbTenKH;
	}

	public static javax.swing.JTextField gettxtTienTra() {
		return txtTienTra;
	}

	public void settxtTienTra(javax.swing.JTextField txtTienTra) {
		this.txtTienTra = txtTienTra;
	}

	public static javax.swing.JLabel getLbTienTra() {
		return lbTienTra;
	}

	public void setLbTienTra(javax.swing.JLabel lbTienTra) {
		this.lbTienTra = lbTienTra;
	}

	public static javax.swing.JLabel getLbTongTien() {
		return lbTongTien;
	}

	public void setLbTongTien(javax.swing.JLabel lbTongTien) {
		this.lbTongTien = lbTongTien;
	}

	public static javax.swing.JTable getTableChiTietHoaDon() {
		return tableChiTietHoaDon;
	}

	public void setTableChiTietHoaDon(javax.swing.JTable tableChiTietHoaDon) {
		this.tableChiTietHoaDon = tableChiTietHoaDon;
	}

	public static DefaultTableModel getModelHoaDon() {
		return modelHoaDon;
	}

	public void setModelHoaDon(DefaultTableModel modelHoaDon) {
		this.modelHoaDon = modelHoaDon;
	}
	public static class OpenFilePDF {
	    public static void openBill(String path) {
	        try {
	            if((new File(System.getProperty("user.dir") + "\\hoadon\\" + path + ".pdf")).exists()){
	                Process p = Runtime
	                        .getRuntime()
	                        .exec("rundll32 url.dll, FileProtocolHandler " + System.getProperty("user.dir") + "\\hoadon\\" + path + ".pdf");
	            } else {
	                JOptionPane.showMessageDialog(null, "File is not Exists");
	            }
	        } catch (Exception e) {
	            JOptionPane.showMessageDialog(null, e);
	        }
	    }
	}
}
